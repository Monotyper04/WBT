import telebot
import pyowm
import random
import pickle
from telebot import types

markup = types.ReplyKeyboardMarkup()

ver = "1.1 beta"

nic = ['624303728']

ugadayNum = 0

try:

    nickList = open(r"database.txt",'rb')
    nicks = pickle.load(nickList)
    nickList.close()

    owm = pyowm.OWM('5ea6afa4aef8afab6cb9663b48fe4148', language= 'ru')
    bot = telebot.TeleBot("942896002:AAHltM0-YNvCYQhawGuBLOXorRu0KhHpBxY")
    print("–ó–∞–ø—É—Å–∫ –ë–æ—Ç–∞ :3")

except:

    nickList = open(r"database.txt",'wb')
    pickle.dump(nic, nickList)
    nickList.close()

    print("–ù–µ –≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¢–µ–ª–µ–≥—Ä–∞–º –ë–æ—Ç–∞ –∏–ª–∏ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Ñ–∞–π–ª–æ–≤")
    pass

print("–ë–æ—Ç –∑–∞–ø—É—à–µ–Ω" , ver , "\nLogs : \n\n")


@bot.message_handler(commands=['start'])
def send_start(message):

    markup = types.ReplyKeyboardRemove()

    bot.send_message(message.chat.id, message.text , reply_markup = markup)

    markup = types.ReplyKeyboardMarkup()

    try:
        nickList = open(r"database.txt",'rb')
        nicks = pickle.load(nickList)
        nicks.index(message.from_user.first_name + message.from_user.last_name)
    except:
        nickList = open(r"database.txt",'rb')
        nicks = pickle.load(nickList)
        nickList.close()
        nickList = open(r"database.txt",'wb')
        nicks.append(message.from_user.first_name + message.from_user.last_name)
        pickle.dump(nicks, nickList)

    markup.row('/help')

    answer = "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç Monotyper \n /help –¥–ª—è –ø–æ–º–æ—â–∏ \n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª : https://www.youtube.com/channel/UCvMJkoR0xSjFNtYIK22bCUg"

    bot.send_message(message.chat.id, answer , reply_markup = markup)

    print("\n\nstarting", "\n\nfrom" , message.from_user.first_name , "||")

    @bot.message_handler(commands=['help'])
    def send_help(message):

        markup = types.ReplyKeyboardRemove()

        bot.send_message(message.chat.id, message.text , reply_markup = markup)

        markup = types.ReplyKeyboardMarkup()

        markup.row('/weather', '/games')
        markup.row('/–ñ–¥–∞—Ç—å–û–±–Ω–æ–≤–ª–µ–Ω–∏–πüòÑ', '/–ñ–¥–∞—Ç—å–ú–æ–µ–í–∏–¥–µ–æ')

        answer = "–≠—Ç–æ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è –º–æ–µ–≥–æ –±–æ—Ç–∞ –∫–æ—Ç–æ—Ä–æ–º—É —è –±—É–¥—É –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏" + "\n\n–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ : " + ver
        answer += "\n\n  –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã : \n /weather \n /games"
        answer += "\n\n –í –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –∫–æ–º–∞–Ω–¥"


        bot.send_message(message.chat.id, answer , reply_markup = markup)



        print("\n\nhelping" , "\n\nfrom" , message.from_user.first_name , "||")

    @bot.message_handler(commands=['–ñ–¥–∞—Ç—å–ú–æ–µ–í–∏–¥–µ–æ'])
    def send_waitVideo(message):
        try :
            idList = open(r"ids.txt",'rb')
            ids = pickle.load(idList)
            idList.close()
            try:
                idList = open(r"ids.txt",'rb')
                ids = pickle.load(idList)
                ids.index(message.chat.id)

                answer = "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã , –∂–¥–∏—Ç–µ –≤–∏–¥–µ–æ\n/start"

                bot.send_message(message.chat.id, answer)
            except:
                idList = open(r"ids.txt",'rb')
                ids = pickle.load(idList)
                idList.close()
                idList = open(r"ids.txt",'wb')
                ids.append(message.chat.id)
                pickle.dump(ids, idList)

                answer = "–°–ø–∞—Å–∏–±–æ —á—Ç–æ –∂–¥—ë—Ç–µ üòÑ\n/start"

                bot.send_message(message.chat.id, answer)
        except :
            answer = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞(–ü—Ä–∏–Ω–æ—à—É —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è)\n\nError:500 Internal Server Error \n/start"

            bot.send_message(message.chat.id, answer)

            print("Exeption : files not created \n Now is created")
            idList = open(r"ids.txt",'wb')
            pickle.dump(nic , idList)
            idList.close()




    @bot.message_handler(commands=['–ñ–¥–∞—Ç—å–û–±–Ω–æ–≤–ª–µ–Ω–∏–πüòÑ'])
    def send_wait(message):

        markup = types.ReplyKeyboardRemove()

        answer = "–Ø —Ä–∞–¥ —á—Ç–æ –∫—Ç–æ-—Ç–æ –∂–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–πüòâ \n/start"

        bot.send_message(message.chat.id, answer , reply_markup = markup)

        print("\n\nwaiting" , "\n\nfrom" , message.from_user.first_name , "||")

    @bot.message_handler(commands=['games'])
    def send_games(message):
        markup = types.ReplyKeyboardRemove()

        bot.send_message(message.chat.id, message.text , reply_markup = markup)

        markup = types.ReplyKeyboardMarkup()

        markup.row('/kosti')
        markup.row('/–ñ–¥–∞—Ç—å–û–±–Ω–æ–≤–ª–µ–Ω–∏–πüòÑ')

        answer = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É : \n\n"
        answer += "/kosti - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6\n"
        bot.send_message(message.chat.id,answer,reply_markup = markup)
        print("\n\ngames" , "\n\nfrom" , message.from_user.first_name , "||")

        @bot.message_handler(commands=['/kosti'])
        def send_kosti(message):
            rNum = random.randrange(1,7,1)
            bot.send_message(message.chat.id,"–£ –≤–∞—Å –≤—ã–ø–∞–ª–æ : " + str(rNum))
            print("\n\nkosti" , rNum , "\n\nfrom" , message.from_user.first_name , "||")

    @bot.message_handler(commands=['weather'])
    def send_weather(message):

        print("\n\nweather" , "\n\nfrom" , message.from_user.first_name , "||")


        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
        try:
            @bot.message_handler(content_types=['text'])
            def send_weatherMess(message):

                try:
                    observation = owm.weather_at_place( message.text )
                    w = observation.get_weather()
                    temp = w.get_temperature('celsius')["temp"]

                    answer = "–í –≥–æ—Ä–æ–¥–µ " + message.text + " —Å–µ–π—á–∞—Å " + w.get_detailed_status() + "\n"
                    answer += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å –≤ —Ä–∞–π–æ–Ω–µ : " + str(round(temp)) + "\n"

                    if temp < 10:
                        answer += "\n–î–æ–≤–æ–ª—å–Ω–æ —Ö–æ–ª–æ–¥–Ω–æ , –æ–¥–µ–Ω—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ"
                    elif temp < 20:
                        answer += "\n–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ , –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ –Ω–∞ —Å–µ–±—è –Ω–∞–∫–∏–Ω—É—Ç—å"
                    else:
                        answer += "\n–î–æ–≤–æ–ª—å–Ω–æ —Ç–µ–ø–ª–æ , –æ–¥–µ–≤–∞–π—Å—è –∫–∞–∫ —Ö–æ—á–µ—à—å"

                    bot.send_message(message.chat.id, answer)
                    print( "\n\n" + "–ó–∞–ø—Ä–æ—Å : " , message.text , "\n\nfrom" , message.from_user.first_name , "||")


                except:
                    pass


        except:
            print( "\n\nExeption", message.text , "\n\nfrom" , message.from_user.first_name , "||")

            answer = "–¢–≤–æ—è –∫–æ–º–∞–Ω–¥–∞ \" " + message.text + " \" –Ω–µ –Ω–∞–π–¥–µ–Ω(–∞)"

            bot.send_message(message.chat.id, answer)



bot.polling( none_stop = True)